// THIS FILE WAS GENERATED BY `xtp-cpp-bindgen`. DO NOT EDIT.
#define EXTISM_CPP_IMPLEMENTATION
#include "pdk.gen.hpp"
#include <extism-pdk.hpp>
#include <jsoncons/json.hpp>
#include <magic_enum.hpp>

JSONCONS_ALL_MEMBER_TRAITS(pdk::IncomingEmail, headers, body, receiver, sender)
JSONCONS_ALL_MEMBER_TRAITS(pdk::ReplyEmail, body, subject)

namespace pdk {

namespace exports {

extism::imports::RawHandle EXTISM_EXPORT_AS("deliver")
    deliver(extism::imports::RawHandle input_ptr) {
  extism::log_debug("deliver: getting JSON input");
  auto input_str = extism::Handle<char>(input_ptr).string();
  if (!input_str.size()) {
    extism::error_set("0 length input cannot be json");
    return 0;
  }
  auto input = jsoncons::decode_json<IncomingEmail>(std::move(input_str));
  extism::log_debug("deliver: calling implementation function");
  auto result = impl::deliver(std::move(input));
  if (!result) {
    extism::error_set("deliver: failed");
    return 0;
  }
  extism::log_debug("deliver: setting JSON output");
  std::string output;
  jsoncons::encode_json(*result, output);
  auto outputh = extism::Handle<char>::from(output);
  if (!outputh) {
    return 0;
  }
  return *outputh;
}

extism::imports::RawHandle EXTISM_EXPORT_AS("reply")
    reply(extism::imports::RawHandle input_ptr) {
  extism::log_debug("reply: getting JSON input");
  auto input_str = extism::Handle<char>(input_ptr).string();
  if (!input_str.size()) {
    extism::error_set("0 length input cannot be json");
    return 0;
  }
  auto input = jsoncons::decode_json<ReplyEmail>(std::move(input_str));
  extism::log_debug("reply: calling implementation function");
  auto result = impl::reply(std::move(input));
  if (!result) {
    extism::error_set("reply: failed");
    return 0;
  }
  extism::log_debug("reply: setting JSON output");
  std::string output;
  jsoncons::encode_json(*result, output);
  auto outputh = extism::Handle<char>::from(output);
  if (!outputh) {
    return 0;
  }
  return *outputh;
}

} // namespace exports

namespace imports {} // namespace imports

} // namespace pdk
